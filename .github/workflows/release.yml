name: asacolips-projects/dungeonworld
on:
  push:
    workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  BETA_BUILD_NUMBER: '0'
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  #AWS_DEFAULT_REGION: us-east-1
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  S3_BUCKET: asacolips-artifacts
  REF_TYPE: ${{ github.ref_type }}
  REF: "${{ github.head_ref || github.ref_name}}"
jobs:

  #####################################################################
  ### Build Job #######################################################
  #####################################################################
  build:
    runs-on: ubuntu-latest
    container:
      image: node:20
    if: github.ref_type == 'tag'
    timeout-minutes: 60
    steps:

    - name: Retrieving git refs
      uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 50
        lfs: false

    - name: Retrieving cache
      uses: actions/cache@v3.3.2
      with:
        path: node_modules/
        key: default

    - name: Install NPM dependencies
      run: npm install

    - name: Build dist directory
      run: npm run build

    - name: Build manifest
      run: node update-build-tags.js --ref_type=${REF_TYPE}  --tag=${REF} --bucket=${S3_BUCKET} --project=${GITHUB_REPOSITORY}

    - name: Create package directory
      run: cp ./dist/system.json ./system.json && mv dist dungeonworld

    - name: Generate dungeonworld.zip
      uses: montudor/action-zip@v1
      with:
        args: zip -q dungeonworld.zip -r dungeonworld

    - name: Upload artifact
      uses: actions/upload-artifact@v4.1.0
      if: success()
      with:
        name: "${{ github.job }}"
        path: |-
          dungeonworld.zip
          system.json

  #####################################################################
  ### Deploy Job ######################################################
  #####################################################################
  deploy:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
    if: (github.ref_type == 'tag') && (github.head_ref == '/^(\d+\.)+(\d+)*((beta|alpha)+(([-.v])*\d+)+)*$/i')
    timeout-minutes: 60
    steps:

    - name: Retrieving git refs
      uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 50
        lfs: false

    - name: Retrieving cache
      uses: actions/cache@v3.3.2
      with:
        path: node_modules/
        key: default

    - name: Download artifacts from previous step
      uses: actions/download-artifact@v4.1.0
      with:
        name: build

    - name: Get Version
      shell: bash
      id: get-version
      run: echo "TAG=$(node ./.github/workflows/get-version.js) >> $GITHUB_ENV"

    - name: Get branch
      run: echo "BRANCH=$(./.github/workflows/get-branch.sh)" >> $GITHUB_ENV

    - name: S3 Upload
      run: |
        aws configure set region us-east-1
        aws s3 cp ./dungeonworld.zip s3://${S3_BUCKET}/dungeonworld/${REF}/dungeonworld.zip --acl="public-read"
        aws s3 cp ./system.json s3://${S3_BUCKET}/dungeonworld/${REF}/system.json --acl="public-read"
        aws s3 cp ./system.json s3://${S3_BUCKET}/dungeonworld/${BRANCH}/system.json --acl="public-read"

    - name: Verify release notes exist
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: "release-notes/${{ env.TAG }}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: steps.check_files.outputs.files_exists == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by actions.
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.TAG }}
        body_path: release-notes/${{ env.TAG }}.md
        draft: true
        prerelease: false

